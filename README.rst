Reduced Order Modeling Framework
================================

|build| |docs|

Instructions
^^^^^^^^^^^^

The reduced order model (ROM) framework was created to build models to use for estimating
commercial building energy loads. The framework currently supports linear models,
random forests, and support vector regressions. The framework handles the building,
evalulation, and validation of the models. During each set of the process, the framework
exports diagnostic data for the user to evaluate the performance of the reduced
order models. In addition to building, evaluating, and validating the reduced order models, the framework
is able to load previously persisted model to be used in third-party applications (e.g. Modelica).

The project was developed focused on evaluating ambient loop distric heating and cooling systems.
As a result, there are several hard coded methods designed to evaluate and validate building
energy modeling data.

This documention will discuss how to build, evaluate, and validate a simple dataset focused on
commercial building energy consumption. The documentation will also demonstrate how to load and run an already
built ROM to be used to approximate building energy loads.



The Ambient Loop Reduced Order Models are written in Python and primarily use the RandomForest
library from the scikit-learn packages. The models are generated by running a reasonable number
of EnergyPlus simulations using OpenStudio and OpenStudio Server to create a large enough parameter
space for the Random Forest Regressor to reasonable train the models.


Follow the instructions below to use the models:

1) Clone this repo
1) Set your directory to the python directory. `cd python`
1) Install Python and Pip
1) Determine which models to use, with or without mass flow rate and download the models from the
links below.

1) Place the models in the ./output/<analysis_id>/models directory. The analysis_id will be one of the
following:

    Without Mass Flow Rate -- 3ff422c2-ca11-44db-b955-b39a47b011e7
    With Mass Flow Rate -- 66fb9766-26e7-4bed-bdf9-0fbfbc8d6c7e

1) Install the Python dependencies

    ```bash
    pip install -r requirements.txt
    ```

1) Run the model

    ```bash
    python smoffice.py --help
    ```

    Without Mass Flow

    ```bash
    python smoffice.py -a 3ff422c2-ca11-44db-b955-b39a47b011e7
    ```

    With Mass Flow

    ```bash
    python smoffice.py -a 66fb9766-26e7-4bed-bdf9-0fbfbc8d6c7e
    ```

    There are many arguments that are passed to the command line. To see the parameters run
    `python smoffice.py --help`.

```
./rom-runner.py run -a smoff_parametric_sweep -m SVR LinearModel -ad example_analyses/smoff-single.json -d 0.15 -o junk.csv
```
# TODO

Instructions on building models.

* Install graphviz (brew install graphviz)

Installation right from the source tree (or via pip from PyPI)

```bash
    python setup.py install
```


.. |build| image:: https://travis-ci.org/nllong/ROM-Framework.svg?branch=develop
    :target: https://travis-ci.org/nllong/ROM-Framework

.. |docs| image:: https://readthedocs.org/projects/reduced-order-modeling-framework/badge/?version=latest
    :target: https://reduced-order-modeling-framework.readthedocs.io/en/latest/?badge=latest
    :alt: Documentation Status
